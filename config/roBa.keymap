#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <behaviors/rgbled_widget.dtsi>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>; 
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <20>;
            };
         };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W            &kp E     &kp R                   &kp T                                                          &kp Y       &kp U  &kp I      &kp O                 &lt 3 P
&mt LCTRL A       &kp S            &kp D     &kp F                   &kp G        &none                       &kp MINUS             &kp H       &kp J  &lt 5 K    &kp L                 &mt RCTRL ENTER
&mt LEFT_SHIFT Z  &mt RIGHT_ALT X  &kp C     &kp V                   &kp B        &kp COLON                   &kp SEMICOLON         &kp N       &kp M  &kp COMMA  &mt RIGHT_ALT PERIOD  &mt RIGHT_SHIFT MINUS
&kp LEFT_WIN      &mkp MB2         &mkp MB1  &lt_to_layer_0 2 LANG1  &lt 1 SPACE  &lt_to_layer_0 3 LANG2      &lt_to_layer_0 2 ESC  &lt 1 BSPC                                          &mkp MB4
            >;
            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;

       };

        FUNCTION {
            bindings = <
&kp RS(NUMBER_1)  &kp RS(NUMBER_2)   &kp RS(NUMBER_3)  &kp RS(NUMBER_4)  &kp RS(N5)                          &kp RS(NUMBER_6)  &kp LS(N7)     &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
&kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3      &kp NUMBER_4      &kp N5      &trans      &msc SCRL_UP    &kp NUMBER_6      &kp N7         &kp N8      &kp N9      &kp N0
&kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BACKSLASH     &kp PLUS          &kp EQUAL   &trans      &msc SCRL_DOWN    &kp COLON         &kp SEMICOLON  &kp COMMA   &kp PERIOD  &kp SLASH
&trans            &trans             &trans            &kp TAB           &kp TAB     &trans      &kp DELETE  &trans                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT_ARROW RIGHT_ARROW>;
        };

        NUM {
            bindings = <
&kp ESC        &kp F7  &kp F8  &kp F9   &kp F10                                    &kp GRAVE      &kp TILDE       &kp UP_ARROW    &kp NON_US_BACKSLASH  &kp RC(RA(END))
&kp TAB        &none   &kp F2  &kp F3   &kp DOUBLE_QUOTES  &none       &trans      &kp PG_UP      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW       &kp PERCENT
&trans         &kp F4  &kp F5  &kp F6   &kp SQT            &trans      &trans      &kp PAGE_DOWN  &kp HOME        &kp END         &trans                &kp QUESTION
&kp RG(RS(S))  &trans  &trans  &kp TAB  &kp TAB            &trans      &kp DELETE  &trans                                                               &kp RC(RA(DELETE))
            >;
           sensor-bindings = <&scroll_up_down>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
